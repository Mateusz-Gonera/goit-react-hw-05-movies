{"version":3,"file":"static/js/139.7122d751.chunk.js","mappings":"sPAgCA,EA5BgB,WACd,IACA,ECHwB,SAAAA,GACxB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACJJ,IACFK,EAAAA,EAAAA,IAAaL,GAASM,MAAK,SAAAC,GACzBJ,GAAW,OAAII,EAAIC,SACpB,GACJ,GAAE,CAACR,IAEG,CAAEE,QAAAA,EACV,CDRqBO,EADAC,EAAAA,EAAAA,MAAZV,SACAE,EAAR,EAAQA,QAER,OAAKA,EACDA,IAAY,IAEZ,0BACE,uEAKJ,0BACE,wBACGA,EAAQS,KAAI,SAAAC,GACX,OACE,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOC,OAKnB,SAlBc,SAACE,EAAA,EAAD,GAsBtB,C","sources":["components/Reviews/Reviews.jsx","utils/hooks/useReviews.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useReviews } from 'utils/hooks/useReviews';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const { reviews } = useReviews(movieId);\n\n  if (!reviews) return <Loader />;\n  if (reviews === [])\n    return (\n      <div>\n        <p>We don't have any reviews for this movie</p>\n      </div>\n    );\n\n  return (\n    <div>\n      <ul>\n        {reviews.map(review => {\n          return (\n            <li key={review.author}>\n              <h4>Author: {review.author}</h4>\n              <p>{review.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import { useEffect, useState } from 'react';\nimport { fetchReviews } from 'utils/api/fetchMovies';\n\nexport const useReviews = movieId => {\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    if (movieId)\n      fetchReviews(movieId).then(res => {\n        setReviews([...res.results]);\n      });\n  }, [movieId]);\n\n  return { reviews };\n};\n"],"names":["movieId","useState","reviews","setReviews","useEffect","fetchReviews","then","res","results","useReviews","useParams","map","review","author","content","Loader"],"sourceRoot":""}